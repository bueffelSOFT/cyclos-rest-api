<?php
/**
 * TransactionViewTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Cyclos\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Cyclos 4.12.6 API
 *
 * The Cyclos REST API is described using OpenAPI 3.0. The descriptor for the api can be downloaded in both [YAML](http://kb1.cyclos-dev.info/api/cyclos-openapi.yaml) or [JSON](http://kb1.cyclos-dev.info/api/cyclos-openapi.json) formats. These files can be used in tools that support the OpenAPI specification, such as the [Swagger Generator](https://generator.swagger.io/).  In the API, whenever some data is referenced, for example, a group, or payment type, either id or internal name can be used. When an user is to be referenced, the special word 'self' (sans quotes) always refers to the currently authenticated user, and any identification method (login name, e-mail, mobile phone, account number or custom field) that can be used on keywords search (as configured in the products) can also be used to identify users. Some specific data types have other identification fields, like accounts can have a number and payments can have a transaction number. This all depends on the current configuration.  Most of the operations that return data allow selecting which fields to include in the response. This is useful for reducing the data to be download over the network. If nothing is set, all object fields are returned. Unprefixed field names will be handled like a whitelist (only listed fields will be included), while names starting with a minus (-) or exclamation mark (!) will be handled as blacklist (listed fields will not be included). This works for nesting as well. For example: `a,b.b1,c.-c1,c.-c2` will return the fields `a`, `b` (containing only the `b1` field) and `c` (containing all its fields except for `c1` or `c2`).  For details of the deprecated elements (operations and model) please visit the [deprecation notes page](https://documentation.cyclos.org/4.12.6/api-deprecation.html) for this version.
 *
 * OpenAPI spec version: 4.12.6
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.19
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Cyclos\Api;

/**
 * TransactionViewTest Class Doc Comment
 *
 * @category    Class
 * @description Details about a transaction
 * @package     Cyclos\Api
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class TransactionViewTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "TransactionView"
     */
    public function testTransactionView()
    {
    }

    /**
     * Test attribute "channel"
     */
    public function testPropertyChannel()
    {
    }

    /**
     * Test attribute "access_client"
     */
    public function testPropertyAccessClient()
    {
    }

    /**
     * Test attribute "by"
     */
    public function testPropertyBy()
    {
    }

    /**
     * Test attribute "received_by"
     */
    public function testPropertyReceivedBy()
    {
    }

    /**
     * Test attribute "received"
     */
    public function testPropertyReceived()
    {
    }

    /**
     * Test attribute "custom_values"
     */
    public function testPropertyCustomValues()
    {
    }

    /**
     * Test attribute "confirmation_password_input"
     */
    public function testPropertyConfirmationPasswordInput()
    {
    }

    /**
     * Test attribute "authorization_level_data"
     */
    public function testPropertyAuthorizationLevelData()
    {
    }

    /**
     * Test attribute "authorization_permissions"
     */
    public function testPropertyAuthorizationPermissions()
    {
    }

    /**
     * Test attribute "authorizations"
     */
    public function testPropertyAuthorizations()
    {
    }

    /**
     * Test attribute "transfer"
     */
    public function testPropertyTransfer()
    {
    }

    /**
     * Test attribute "scheduled_payment_permissions"
     */
    public function testPropertyScheduledPaymentPermissions()
    {
    }

    /**
     * Test attribute "due_amount"
     */
    public function testPropertyDueAmount()
    {
    }

    /**
     * Test attribute "installments"
     */
    public function testPropertyInstallments()
    {
    }

    /**
     * Test attribute "recurring_payment_permissions"
     */
    public function testPropertyRecurringPaymentPermissions()
    {
    }

    /**
     * Test attribute "next_occurrence_date"
     */
    public function testPropertyNextOccurrenceDate()
    {
    }

    /**
     * Test attribute "occurrence_interval"
     */
    public function testPropertyOccurrenceInterval()
    {
    }

    /**
     * Test attribute "occurrences_count"
     */
    public function testPropertyOccurrencesCount()
    {
    }

    /**
     * Test attribute "occurrences"
     */
    public function testPropertyOccurrences()
    {
    }

    /**
     * Test attribute "original_transfer"
     */
    public function testPropertyOriginalTransfer()
    {
    }

    /**
     * Test attribute "chargeback_transfer"
     */
    public function testPropertyChargebackTransfer()
    {
    }

    /**
     * Test attribute "payment_request_permissions"
     */
    public function testPropertyPaymentRequestPermissions()
    {
    }

    /**
     * Test attribute "comments"
     */
    public function testPropertyComments()
    {
    }

    /**
     * Test attribute "expiration_date"
     */
    public function testPropertyExpirationDate()
    {
    }

    /**
     * Test attribute "change_expiration_date_comments"
     */
    public function testPropertyChangeExpirationDateComments()
    {
    }

    /**
     * Test attribute "process_date"
     */
    public function testPropertyProcessDate()
    {
    }

    /**
     * Test attribute "transaction"
     */
    public function testPropertyTransaction()
    {
    }

    /**
     * Test attribute "sms_code"
     */
    public function testPropertySmsCode()
    {
    }

    /**
     * Test attribute "scheduled"
     */
    public function testPropertyScheduled()
    {
    }

    /**
     * Test attribute "scheduling"
     */
    public function testPropertyScheduling()
    {
    }

    /**
     * Test attribute "installments_count"
     */
    public function testPropertyInstallmentsCount()
    {
    }

    /**
     * Test attribute "first_installment_is_immediate"
     */
    public function testPropertyFirstInstallmentIsImmediate()
    {
    }

    /**
     * Test attribute "first_occurrence_is_immediate"
     */
    public function testPropertyFirstOccurrenceIsImmediate()
    {
    }

    /**
     * Test attribute "to_principal_type"
     */
    public function testPropertyToPrincipalType()
    {
    }

    /**
     * Test attribute "to_principal_value"
     */
    public function testPropertyToPrincipalValue()
    {
    }

    /**
     * Test attribute "payer_principal"
     */
    public function testPropertyPayerPrincipal()
    {
    }

    /**
     * Test attribute "cancel_url"
     */
    public function testPropertyCancelUrl()
    {
    }

    /**
     * Test attribute "success_url"
     */
    public function testPropertySuccessUrl()
    {
    }

    /**
     * Test attribute "preview"
     */
    public function testPropertyPreview()
    {
    }

    /**
     * Test attribute "users_which_can_add_to_contacts"
     */
    public function testPropertyUsersWhichCanAddToContacts()
    {
    }

    /**
     * Test attribute "users_which_can_view_profile"
     */
    public function testPropertyUsersWhichCanViewProfile()
    {
    }

    /**
     * Test attribute "authorization_type"
     */
    public function testPropertyAuthorizationType()
    {
    }

    /**
     * Test attribute "scheduled_payment_status"
     */
    public function testPropertyScheduledPaymentStatus()
    {
    }

    /**
     * Test attribute "recurring_payment_status"
     */
    public function testPropertyRecurringPaymentStatus()
    {
    }

    /**
     * Test attribute "payment_request_status"
     */
    public function testPropertyPaymentRequestStatus()
    {
    }

    /**
     * Test attribute "external_payment_status"
     */
    public function testPropertyExternalPaymentStatus()
    {
    }

    /**
     * Test attribute "ticket_status"
     */
    public function testPropertyTicketStatus()
    {
    }
}
