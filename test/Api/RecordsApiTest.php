<?php
/**
 * RecordsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Cyclos\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Cyclos 4.12.6 API
 *
 * The Cyclos REST API is described using OpenAPI 3.0. The descriptor for the api can be downloaded in both [YAML](http://kb1.cyclos-dev.info/api/cyclos-openapi.yaml) or [JSON](http://kb1.cyclos-dev.info/api/cyclos-openapi.json) formats. These files can be used in tools that support the OpenAPI specification, such as the [Swagger Generator](https://generator.swagger.io/).  In the API, whenever some data is referenced, for example, a group, or payment type, either id or internal name can be used. When an user is to be referenced, the special word 'self' (sans quotes) always refers to the currently authenticated user, and any identification method (login name, e-mail, mobile phone, account number or custom field) that can be used on keywords search (as configured in the products) can also be used to identify users. Some specific data types have other identification fields, like accounts can have a number and payments can have a transaction number. This all depends on the current configuration.  Most of the operations that return data allow selecting which fields to include in the response. This is useful for reducing the data to be download over the network. If nothing is set, all object fields are returned. Unprefixed field names will be handled like a whitelist (only listed fields will be included), while names starting with a minus (-) or exclamation mark (!) will be handled as blacklist (listed fields will not be included). This works for nesting as well. For example: `a,b.b1,c.-c1,c.-c2` will return the fields `a`, `b` (containing only the `b1` field) and `c` (containing all its fields except for `c1` or `c2`).  For details of the deprecated elements (operations and model) please visit the [deprecation notes page](https://documentation.cyclos.org/4.12.6/api-deprecation.html) for this version.
 *
 * OpenAPI spec version: 4.12.6
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.19
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Cyclos\Api;

use Cyclos\Api\Configuration;
use Cyclos\Api\ApiException;
use Cyclos\Api\ObjectSerializer;

/**
 * RecordsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Cyclos\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RecordsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createRecord
     *
     * Creates a new record for the given owner and type.
     *
     */
    public function testCreateRecord()
    {
    }

    /**
     * Test case for deleteRecord
     *
     * Removes a record.
     *
     */
    public function testDeleteRecord()
    {
    }

    /**
     * Test case for getRecordDataForEdit
     *
     * Returns data to edit an existing record.
     *
     */
    public function testGetRecordDataForEdit()
    {
    }

    /**
     * Test case for getRecordDataForGeneralSearch
     *
     * Returns data for searching records of a type over any owner.
     *
     */
    public function testGetRecordDataForGeneralSearch()
    {
    }

    /**
     * Test case for getRecordDataForNew
     *
     * Returns data to create a new record.
     *
     */
    public function testGetRecordDataForNew()
    {
    }

    /**
     * Test case for getRecordDataForOwnerSearch
     *
     * Returns data for searching records of a specific type and owner.
     *
     */
    public function testGetRecordDataForOwnerSearch()
    {
    }

    /**
     * Test case for getRecordDataForSharedSearch
     *
     * Returns data for searching records with shared fields.
     *
     */
    public function testGetRecordDataForSharedSearch()
    {
    }

    /**
     * Test case for getRecordTypeByOwner
     *
     * Returns a single record type over a user or system.
     *
     */
    public function testGetRecordTypeByOwner()
    {
    }

    /**
     * Test case for listRecordTypesByOwner
     *
     * Lists the record types over a user or system.
     *
     */
    public function testListRecordTypesByOwner()
    {
    }

    /**
     * Test case for listRecordTypesForGeneralSearch
     *
     * Lists the record types for general search.
     *
     */
    public function testListRecordTypesForGeneralSearch()
    {
    }

    /**
     * Test case for searchGeneralRecords
     *
     * Searches for records of a specific type over any owner.
     *
     */
    public function testSearchGeneralRecords()
    {
    }

    /**
     * Test case for searchOwnerRecords
     *
     * Searches for records of a specific type and owner.
     *
     */
    public function testSearchOwnerRecords()
    {
    }

    /**
     * Test case for searchSharedRecords
     *
     * Searches for records with shared fields.
     *
     */
    public function testSearchSharedRecords()
    {
    }

    /**
     * Test case for updateRecord
     *
     * Updates an existing record.
     *
     */
    public function testUpdateRecord()
    {
    }

    /**
     * Test case for viewRecord
     *
     * Returns details of a specific record.
     *
     */
    public function testViewRecord()
    {
    }
}
