<?php
/**
 * OperationsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Cyclos\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Cyclos 4.12.6 API
 *
 * The Cyclos REST API is described using OpenAPI 3.0. The descriptor for the api can be downloaded in both [YAML](http://kb1.cyclos-dev.info/api/cyclos-openapi.yaml) or [JSON](http://kb1.cyclos-dev.info/api/cyclos-openapi.json) formats. These files can be used in tools that support the OpenAPI specification, such as the [Swagger Generator](https://generator.swagger.io/).  In the API, whenever some data is referenced, for example, a group, or payment type, either id or internal name can be used. When an user is to be referenced, the special word 'self' (sans quotes) always refers to the currently authenticated user, and any identification method (login name, e-mail, mobile phone, account number or custom field) that can be used on keywords search (as configured in the products) can also be used to identify users. Some specific data types have other identification fields, like accounts can have a number and payments can have a transaction number. This all depends on the current configuration.  Most of the operations that return data allow selecting which fields to include in the response. This is useful for reducing the data to be download over the network. If nothing is set, all object fields are returned. Unprefixed field names will be handled like a whitelist (only listed fields will be included), while names starting with a minus (-) or exclamation mark (!) will be handled as blacklist (listed fields will not be included). This works for nesting as well. For example: `a,b.b1,c.-c1,c.-c2` will return the fields `a`, `b` (containing only the `b1` field) and `c` (containing all its fields except for `c1` or `c2`).  For details of the deprecated elements (operations and model) please visit the [deprecation notes page](https://documentation.cyclos.org/4.12.6/api-deprecation.html) for this version.
 *
 * OpenAPI spec version: 4.12.6
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.19
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Cyclos\Api;

use Cyclos\Api\Configuration;
use Cyclos\Api\ApiException;
use Cyclos\Api\ObjectSerializer;

/**
 * OperationsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Cyclos\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class OperationsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for getAdOperationDataForRun
     *
     * Returns configuration data for running a custom operation over an advertisement.
     *
     */
    public function testGetAdOperationDataForRun()
    {
    }

    /**
     * Test case for getContactInfoOperationDataForRun
     *
     * Returns configuration data for running a custom operation over an additional contact information.
     *
     */
    public function testGetContactInfoOperationDataForRun()
    {
    }

    /**
     * Test case for getContactOperationDataForRun
     *
     * Returns configuration data for running a custom operation over a contact.
     *
     */
    public function testGetContactOperationDataForRun()
    {
    }

    /**
     * Test case for getOperationDataForRun
     *
     * Returns configuration data for running a custom operation without additional scope.
     *
     */
    public function testGetOperationDataForRun()
    {
    }

    /**
     * Test case for getOwnerOperationDataForRun
     *
     * Returns configuration data for running a custom operation over an owner.
     *
     */
    public function testGetOwnerOperationDataForRun()
    {
    }

    /**
     * Test case for getRecordOperationDataForRun
     *
     * Returns configuration data for running a custom operation over a record.
     *
     */
    public function testGetRecordOperationDataForRun()
    {
    }

    /**
     * Test case for getTransferOperationDataForRun
     *
     * Returns configuration data for running a custom operation over a transfer.
     *
     */
    public function testGetTransferOperationDataForRun()
    {
    }

    /**
     * Test case for listOperationsByAd
     *
     * Lists the custom operations over the given advertisement.
     *
     */
    public function testListOperationsByAd()
    {
    }

    /**
     * Test case for listOperationsByContact
     *
     * Lists the custom operations over the given contact.
     *
     */
    public function testListOperationsByContact()
    {
    }

    /**
     * Test case for listOperationsByContactInfo
     *
     * Lists the custom operations over the given additional contact information.
     *
     */
    public function testListOperationsByContactInfo()
    {
    }

    /**
     * Test case for listOperationsByOwner
     *
     * Lists the custom operations over the system or user.
     *
     */
    public function testListOperationsByOwner()
    {
    }

    /**
     * Test case for listOperationsByRecord
     *
     * Lists the custom operations over the given record.
     *
     */
    public function testListOperationsByRecord()
    {
    }

    /**
     * Test case for listOperationsByTransfer
     *
     * Lists the custom operations over the given transfer.
     *
     */
    public function testListOperationsByTransfer()
    {
    }

    /**
     * Test case for runAdOperation
     *
     * Runs a custom operation over an advertisement.
     *
     */
    public function testRunAdOperation()
    {
    }

    /**
     * Test case for runAdOperationWithUpload
     *
     * Runs a custom operation over an advertisement while uploading a file.
     *
     */
    public function testRunAdOperationWithUpload()
    {
    }

    /**
     * Test case for runContactInfoOperation
     *
     * Runs a custom operation over an additional contact information.
     *
     */
    public function testRunContactInfoOperation()
    {
    }

    /**
     * Test case for runContactInfoOperationWithUpload
     *
     * Runs a custom operation over an additional contact information while uploading a file.
     *
     */
    public function testRunContactInfoOperationWithUpload()
    {
    }

    /**
     * Test case for runContactOperation
     *
     * Runs a custom operation over a contact.
     *
     */
    public function testRunContactOperation()
    {
    }

    /**
     * Test case for runContactOperationWithUpload
     *
     * Runs a custom operation over an contact while uploading a file.
     *
     */
    public function testRunContactOperationWithUpload()
    {
    }

    /**
     * Test case for runCustomOperationCallback
     *
     * Runs the callback of an external redirect custom operation.
     *
     */
    public function testRunCustomOperationCallback()
    {
    }

    /**
     * Test case for runOperation
     *
     * Runs a custom operation without additional scope.
     *
     */
    public function testRunOperation()
    {
    }

    /**
     * Test case for runOperationWithUpload
     *
     * Runs a custom operation without additional scope while uploading a file.
     *
     */
    public function testRunOperationWithUpload()
    {
    }

    /**
     * Test case for runOwnerOperation
     *
     * Runs a custom operation either for system or user.
     *
     */
    public function testRunOwnerOperation()
    {
    }

    /**
     * Test case for runOwnerOperationWithUpload
     *
     * Runs a custom operation either for system or user while uploading a file.
     *
     */
    public function testRunOwnerOperationWithUpload()
    {
    }

    /**
     * Test case for runRecordOperation
     *
     * Runs a custom operation over a record.
     *
     */
    public function testRunRecordOperation()
    {
    }

    /**
     * Test case for runRecordOperationWithUpload
     *
     * Runs a custom operation over a record while uploading a file.
     *
     */
    public function testRunRecordOperationWithUpload()
    {
    }

    /**
     * Test case for runTransferOperation
     *
     * Runs a custom operation over a transfer.
     *
     */
    public function testRunTransferOperation()
    {
    }

    /**
     * Test case for runTransferOperationWithUpload
     *
     * Runs a custom operation over a transfer while uploading a file.
     *
     */
    public function testRunTransferOperationWithUpload()
    {
    }
}
