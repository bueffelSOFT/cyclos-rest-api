<?php
/**
 * ImagesApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Cyclos\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Cyclos 4.12.6 API
 *
 * The Cyclos REST API is described using OpenAPI 3.0. The descriptor for the api can be downloaded in both [YAML](http://kb1.cyclos-dev.info/api/cyclos-openapi.yaml) or [JSON](http://kb1.cyclos-dev.info/api/cyclos-openapi.json) formats. These files can be used in tools that support the OpenAPI specification, such as the [Swagger Generator](https://generator.swagger.io/).  In the API, whenever some data is referenced, for example, a group, or payment type, either id or internal name can be used. When an user is to be referenced, the special word 'self' (sans quotes) always refers to the currently authenticated user, and any identification method (login name, e-mail, mobile phone, account number or custom field) that can be used on keywords search (as configured in the products) can also be used to identify users. Some specific data types have other identification fields, like accounts can have a number and payments can have a transaction number. This all depends on the current configuration.  Most of the operations that return data allow selecting which fields to include in the response. This is useful for reducing the data to be download over the network. If nothing is set, all object fields are returned. Unprefixed field names will be handled like a whitelist (only listed fields will be included), while names starting with a minus (-) or exclamation mark (!) will be handled as blacklist (listed fields will not be included). This works for nesting as well. For example: `a,b.b1,c.-c1,c.-c2` will return the fields `a`, `b` (containing only the `b1` field) and `c` (containing all its fields except for `c1` or `c2`).  For details of the deprecated elements (operations and model) please visit the [deprecation notes page](https://documentation.cyclos.org/4.12.6/api-deprecation.html) for this version.
 *
 * OpenAPI spec version: 4.12.6
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.19
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Cyclos\Api;

use Cyclos\Api\Configuration;
use Cyclos\Api\ApiException;
use Cyclos\Api\ObjectSerializer;

/**
 * ImagesApiTest Class Doc Comment
 *
 * @category Class
 * @package  Cyclos\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ImagesApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for deleteImage
     *
     * Removes an image by id or key.
     *
     */
    public function testDeleteImage()
    {
    }

    /**
     * Test case for getAdImagesListData
     *
     * Returns the images of an advertisement, plus additional permissions and data..
     *
     */
    public function testGetAdImagesListData()
    {
    }

    /**
     * Test case for getImageContent
     *
     * Returns an image content by id or key.
     *
     */
    public function testGetImageContent()
    {
    }

    /**
     * Test case for getImageContentById
     *
     * Returns an image content by id.
     *
     */
    public function testGetImageContentById()
    {
    }

    /**
     * Test case for getImageContentDeprecated
     *
     * Returns an image content.
     *
     */
    public function testGetImageContentDeprecated()
    {
    }

    /**
     * Test case for getUserImagesListData
     *
     * Returns either `profile` or `custom` images for a given user, plus additional permissions and data.
     *
     */
    public function testGetUserImagesListData()
    {
    }

    /**
     * Test case for listAdImages
     *
     * Lists the images of an advertisement.
     *
     */
    public function testListAdImages()
    {
    }

    /**
     * Test case for listTempImages
     *
     * Lists temporary images related to the currently authenticated user or guest.
     *
     */
    public function testListTempImages()
    {
    }

    /**
     * Test case for listUserImages
     *
     * Lists either `profile` or `custom` images for a given user..
     *
     */
    public function testListUserImages()
    {
    }

    /**
     * Test case for reorderAdImages
     *
     * Changes the order of the images of an advertisement..
     *
     */
    public function testReorderAdImages()
    {
    }

    /**
     * Test case for reorderProfileImages
     *
     * Changes the order of a user's profile images.
     *
     */
    public function testReorderProfileImages()
    {
    }

    /**
     * Test case for uploadAdImage
     *
     * Adds a new image for the given advertisement..
     *
     */
    public function testUploadAdImage()
    {
    }

    /**
     * Test case for uploadContactInfoImage
     *
     * Uploads a new image for the given additional contact information..
     *
     */
    public function testUploadContactInfoImage()
    {
    }

    /**
     * Test case for uploadContactInfoImageDeprecated
     *
     * This operation is deprecated, use `POST /contact-infos/{id}/image` instead..
     *
     */
    public function testUploadContactInfoImageDeprecated()
    {
    }

    /**
     * Test case for uploadTempImage
     *
     * Adds a new temporary image for the currently authenticated user or guest..
     *
     */
    public function testUploadTempImage()
    {
    }

    /**
     * Test case for uploadUserImage
     *
     * Adds a new image for the given user. The image kind is either  `profile` or `custom`..
     *
     */
    public function testUploadUserImage()
    {
    }

    /**
     * Test case for viewImage
     *
     * Returns an image details by id or key.
     *
     */
    public function testViewImage()
    {
    }
}
