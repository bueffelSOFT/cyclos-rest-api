<?php
/**
 * OperationScopeEnum
 *
 * PHP version 5
 *
 * @category Class
 * @package  Cyclos\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Cyclos 4.12.6 API
 *
 * The Cyclos REST API is described using OpenAPI 3.0. The descriptor for the api can be downloaded in both [YAML](http://kb1.cyclos-dev.info/api/cyclos-openapi.yaml) or [JSON](http://kb1.cyclos-dev.info/api/cyclos-openapi.json) formats. These files can be used in tools that support the OpenAPI specification, such as the [Swagger Generator](https://generator.swagger.io/).  In the API, whenever some data is referenced, for example, a group, or payment type, either id or internal name can be used. When an user is to be referenced, the special word 'self' (sans quotes) always refers to the currently authenticated user, and any identification method (login name, e-mail, mobile phone, account number or custom field) that can be used on keywords search (as configured in the products) can also be used to identify users. Some specific data types have other identification fields, like accounts can have a number and payments can have a transaction number. This all depends on the current configuration.  Most of the operations that return data allow selecting which fields to include in the response. This is useful for reducing the data to be download over the network. If nothing is set, all object fields are returned. Unprefixed field names will be handled like a whitelist (only listed fields will be included), while names starting with a minus (-) or exclamation mark (!) will be handled as blacklist (listed fields will not be included). This works for nesting as well. For example: `a,b.b1,c.-c1,c.-c2` will return the fields `a`, `b` (containing only the `b1` field) and `c` (containing all its fields except for `c1` or `c2`).  For details of the deprecated elements (operations and model) please visit the [deprecation notes page](https://documentation.cyclos.org/4.12.6/api-deprecation.html) for this version.
 *
 * OpenAPI spec version: 4.12.6
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.19
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Cyclos\Api\Model;
use \Cyclos\Api\ObjectSerializer;

/**
 * OperationScopeEnum Class Doc Comment
 *
 * @category Class
 * @description The scope determines where does a custom operation can be executed Possible values are: - &#x60;advertisement&#x60;: A custom operation which is executed over an advertisement - &#x60;bulkAction&#x60;: A custom operation executed over a set of users (one at a time) - &#x60;contact&#x60;: A custom operation which is executed over a contact in a user&#x27;s contact list - &#x60;contactInfo&#x60;: A custom operation which is executed over an additional contact information, which is part of the user profile - &#x60;internal&#x60;: A custom operation which is executed by another custom operation - &#x60;menu&#x60;: A custom operation which is visible in a custom menu item - &#x60;record&#x60;: A custom operation which is executed over a record - &#x60;system&#x60;: A general, system custom operation - &#x60;transfer&#x60;: A custom operation which is executed over a transfer - &#x60;user&#x60;: A custom operation over a single user
 * @package  Cyclos\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class OperationScopeEnum
{
    /**
     * Possible values of this enum
     */
    const ADVERTISEMENT = 'advertisement';
const BULK_ACTION = 'bulkAction';
const CONTACT = 'contact';
const CONTACT_INFO = 'contactInfo';
const INTERNAL = 'internal';
const MENU = 'menu';
const RECORD = 'record';
const SYSTEM = 'system';
const TRANSFER = 'transfer';
const USER = 'user';
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::ADVERTISEMENT,
self::BULK_ACTION,
self::CONTACT,
self::CONTACT_INFO,
self::INTERNAL,
self::MENU,
self::RECORD,
self::SYSTEM,
self::TRANSFER,
self::USER,        ];
    }
}
