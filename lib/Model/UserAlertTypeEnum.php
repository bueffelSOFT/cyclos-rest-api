<?php
/**
 * UserAlertTypeEnum
 *
 * PHP version 5
 *
 * @category Class
 * @package  Cyclos\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Cyclos 4.12.6 API
 *
 * The Cyclos REST API is described using OpenAPI 3.0. The descriptor for the api can be downloaded in both [YAML](http://kb1.cyclos-dev.info/api/cyclos-openapi.yaml) or [JSON](http://kb1.cyclos-dev.info/api/cyclos-openapi.json) formats. These files can be used in tools that support the OpenAPI specification, such as the [Swagger Generator](https://generator.swagger.io/).  In the API, whenever some data is referenced, for example, a group, or payment type, either id or internal name can be used. When an user is to be referenced, the special word 'self' (sans quotes) always refers to the currently authenticated user, and any identification method (login name, e-mail, mobile phone, account number or custom field) that can be used on keywords search (as configured in the products) can also be used to identify users. Some specific data types have other identification fields, like accounts can have a number and payments can have a transaction number. This all depends on the current configuration.  Most of the operations that return data allow selecting which fields to include in the response. This is useful for reducing the data to be download over the network. If nothing is set, all object fields are returned. Unprefixed field names will be handled like a whitelist (only listed fields will be included), while names starting with a minus (-) or exclamation mark (!) will be handled as blacklist (listed fields will not be included). This works for nesting as well. For example: `a,b.b1,c.-c1,c.-c2` will return the fields `a`, `b` (containing only the `b1` field) and `c` (containing all its fields except for `c1` or `c2`).  For details of the deprecated elements (operations and model) please visit the [deprecation notes page](https://documentation.cyclos.org/4.12.6/api-deprecation.html) for this version.
 *
 * OpenAPI spec version: 4.12.6
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.19
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Cyclos\Api\Model;
use \Cyclos\Api\ObjectSerializer;

/**
 * UserAlertTypeEnum Class Doc Comment
 *
 * @category Class
 * @description The type of user alert Possible values are: - &#x60;custom&#x60;: Custom alerts thrown by scripts - &#x60;givenVeryBadRefs&#x60;: A user has exceeded the maximum number of given very bad references - &#x60;insufficientBalanceForInitialCredit&#x60;: A user account&#x27;s initial credit couldn&#x27;t be granted because the source account lacked funds - &#x60;maxDeviceActivationAttemptsReached&#x60;: A user has reached the maximum number of attempts to activate a device by code - &#x60;maxDeviceConfirmationCheckAttemptsReached&#x60;: A user has reached the maximum number of attempts to check for a processed device confirmation - &#x60;maxTokenActivationAttemptsReached&#x60;: A user has reached the maximum number of attempts to activate a token - &#x60;maxUserLocalizationAttemptsReached&#x60;: A user has reached the maximum number of attempts to find other users - &#x60;maxVoucherRedeemAttemptsReached&#x60;: A user has reached the maximum number of attempts to redeem a voucher - &#x60;moveUserAutomaticallyFailed&#x60;: A user couldn&#x27;t be moved automatically to another group - &#x60;passwordDisabledByTries&#x60;: A user password has been disabled by exceeding the wrong attempts - &#x60;passwordTemporarilyBlocked&#x60;: A user password has been temporarily blocked by exceeding the wrong attempts - &#x60;receivedVeryBadRefs&#x60;: A user has exceeded the maximum number of received very bad references - &#x60;scheduledPaymentFailed&#x60;: An scheduled payment has failed
 * @package  Cyclos\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class UserAlertTypeEnum
{
    /**
     * Possible values of this enum
     */
    const CUSTOM = 'custom';
const GIVEN_VERY_BAD_REFS = 'givenVeryBadRefs';
const INSUFFICIENT_BALANCE_FOR_INITIAL_CREDIT = 'insufficientBalanceForInitialCredit';
const MAX_DEVICE_ACTIVATION_ATTEMPTS_REACHED = 'maxDeviceActivationAttemptsReached';
const MAX_DEVICE_CONFIRMATION_CHECK_ATTEMPTS_REACHED = 'maxDeviceConfirmationCheckAttemptsReached';
const MAX_TOKEN_ACTIVATION_ATTEMPTS_REACHED = 'maxTokenActivationAttemptsReached';
const MAX_USER_LOCALIZATION_ATTEMPTS_REACHED = 'maxUserLocalizationAttemptsReached';
const MAX_VOUCHER_REDEEM_ATTEMPTS_REACHED = 'maxVoucherRedeemAttemptsReached';
const MOVE_USER_AUTOMATICALLY_FAILED = 'moveUserAutomaticallyFailed';
const PASSWORD_DISABLED_BY_TRIES = 'passwordDisabledByTries';
const PASSWORD_TEMPORARILY_BLOCKED = 'passwordTemporarilyBlocked';
const RECEIVED_VERY_BAD_REFS = 'receivedVeryBadRefs';
const SCHEDULED_PAYMENT_FAILED = 'scheduledPaymentFailed';
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::CUSTOM,
self::GIVEN_VERY_BAD_REFS,
self::INSUFFICIENT_BALANCE_FOR_INITIAL_CREDIT,
self::MAX_DEVICE_ACTIVATION_ATTEMPTS_REACHED,
self::MAX_DEVICE_CONFIRMATION_CHECK_ATTEMPTS_REACHED,
self::MAX_TOKEN_ACTIVATION_ATTEMPTS_REACHED,
self::MAX_USER_LOCALIZATION_ATTEMPTS_REACHED,
self::MAX_VOUCHER_REDEEM_ATTEMPTS_REACHED,
self::MOVE_USER_AUTOMATICALLY_FAILED,
self::PASSWORD_DISABLED_BY_TRIES,
self::PASSWORD_TEMPORARILY_BLOCKED,
self::RECEIVED_VERY_BAD_REFS,
self::SCHEDULED_PAYMENT_FAILED,        ];
    }
}
