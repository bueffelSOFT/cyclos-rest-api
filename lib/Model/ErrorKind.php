<?php
/**
 * ErrorKind
 *
 * PHP version 5
 *
 * @category Class
 * @package  Cyclos\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Cyclos 4.12.6 API
 *
 * The Cyclos REST API is described using OpenAPI 3.0. The descriptor for the api can be downloaded in both [YAML](http://kb1.cyclos-dev.info/api/cyclos-openapi.yaml) or [JSON](http://kb1.cyclos-dev.info/api/cyclos-openapi.json) formats. These files can be used in tools that support the OpenAPI specification, such as the [Swagger Generator](https://generator.swagger.io/).  In the API, whenever some data is referenced, for example, a group, or payment type, either id or internal name can be used. When an user is to be referenced, the special word 'self' (sans quotes) always refers to the currently authenticated user, and any identification method (login name, e-mail, mobile phone, account number or custom field) that can be used on keywords search (as configured in the products) can also be used to identify users. Some specific data types have other identification fields, like accounts can have a number and payments can have a transaction number. This all depends on the current configuration.  Most of the operations that return data allow selecting which fields to include in the response. This is useful for reducing the data to be download over the network. If nothing is set, all object fields are returned. Unprefixed field names will be handled like a whitelist (only listed fields will be included), while names starting with a minus (-) or exclamation mark (!) will be handled as blacklist (listed fields will not be included). This works for nesting as well. For example: `a,b.b1,c.-c1,c.-c2` will return the fields `a`, `b` (containing only the `b1` field) and `c` (containing all its fields except for `c1` or `c2`).  For details of the deprecated elements (operations and model) please visit the [deprecation notes page](https://documentation.cyclos.org/4.12.6/api-deprecation.html) for this version.
 *
 * OpenAPI spec version: 4.12.6
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.19
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Cyclos\Api\Model;
use \Cyclos\Api\ObjectSerializer;

/**
 * ErrorKind Class Doc Comment
 *
 * @category Class
 * @description Error types associated to the HTTP Status 500 Possible values are: - &#x60;buyVoucher&#x60;: An error has occurred when buying a voucher - &#x60;forgottenPassword&#x60;: An error has occurred when changing a forgotten password. - &#x60;general&#x60;: An unexpected error has occurred - &#x60;initializeNfc&#x60;: An error has occurred when initializing a NFC token - &#x60;nested&#x60;: An error which has another internal error at a given property / index - &#x60;nfcAuth&#x60;: An error has occurred when making an external NFC authentication - &#x60;otp&#x60;: An error has occurred requesting an OTP - &#x60;payment&#x60;: An error has occurred when making a payment - &#x60;personalizeNfc&#x60;: An error has occurred when personalizing a NFC token - &#x60;pos&#x60;: An error has occurred when receiving a payment on a POS operation - &#x60;redeemVoucher&#x60;: An error has occurred when redeeming a voucher - &#x60;shoppingCart&#x60;: An error has occurred when interacting with a shopping cart. - &#x60;shoppingCartCheckout&#x60;: An error has occurred when checking out a shopping cart.
 * @package  Cyclos\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ErrorKind
{
    /**
     * Possible values of this enum
     */
    const BUY_VOUCHER = 'buyVoucher';
const FORGOTTEN_PASSWORD = 'forgottenPassword';
const GENERAL = 'general';
const INITIALIZE_NFC = 'initializeNfc';
const NESTED = 'nested';
const NFC_AUTH = 'nfcAuth';
const OTP = 'otp';
const PAYMENT = 'payment';
const PERSONALIZE_NFC = 'personalizeNfc';
const POS = 'pos';
const REDEEM_VOUCHER = 'redeemVoucher';
const SHOPPING_CART = 'shoppingCart';
const SHOPPING_CART_CHECKOUT = 'shoppingCartCheckout';
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::BUY_VOUCHER,
self::FORGOTTEN_PASSWORD,
self::GENERAL,
self::INITIALIZE_NFC,
self::NESTED,
self::NFC_AUTH,
self::OTP,
self::PAYMENT,
self::PERSONALIZE_NFC,
self::POS,
self::REDEEM_VOUCHER,
self::SHOPPING_CART,
self::SHOPPING_CART_CHECKOUT,        ];
    }
}
