<?php
/**
 * MobileOperationEnum
 *
 * PHP version 5
 *
 * @category Class
 * @package  Cyclos\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Cyclos 4.12.6 API
 *
 * The Cyclos REST API is described using OpenAPI 3.0. The descriptor for the api can be downloaded in both [YAML](http://kb1.cyclos-dev.info/api/cyclos-openapi.yaml) or [JSON](http://kb1.cyclos-dev.info/api/cyclos-openapi.json) formats. These files can be used in tools that support the OpenAPI specification, such as the [Swagger Generator](https://generator.swagger.io/).  In the API, whenever some data is referenced, for example, a group, or payment type, either id or internal name can be used. When an user is to be referenced, the special word 'self' (sans quotes) always refers to the currently authenticated user, and any identification method (login name, e-mail, mobile phone, account number or custom field) that can be used on keywords search (as configured in the products) can also be used to identify users. Some specific data types have other identification fields, like accounts can have a number and payments can have a transaction number. This all depends on the current configuration.  Most of the operations that return data allow selecting which fields to include in the response. This is useful for reducing the data to be download over the network. If nothing is set, all object fields are returned. Unprefixed field names will be handled like a whitelist (only listed fields will be included), while names starting with a minus (-) or exclamation mark (!) will be handled as blacklist (listed fields will not be included). This works for nesting as well. For example: `a,b.b1,c.-c1,c.-c2` will return the fields `a`, `b` (containing only the `b1` field) and `c` (containing all its fields except for `c1` or `c2`).  For details of the deprecated elements (operations and model) please visit the [deprecation notes page](https://documentation.cyclos.org/4.12.6/api-deprecation.html) for this version.
 *
 * OpenAPI spec version: 4.12.6
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.19
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Cyclos\Api\Model;
use \Cyclos\Api\ObjectSerializer;

/**
 * MobileOperationEnum Class Doc Comment
 *
 * @category Class
 * @description The possible operations the mobile application can perform Possible values are: - &#x60;acceptTicket&#x60;: Accepts a generated QR code for performing a payment - &#x60;activateNfcDevice&#x60;: Activate the phone as NFC device - &#x60;assignPos&#x60;: Assign an access client for POS mode - &#x60;boughtVouchers&#x60;: View bought vouchers - &#x60;buyVoucher&#x60;: Buy a voucher - &#x60;createTicket&#x60;: Generate a QR Code for receive payment - &#x60;deactivateNfcDevice&#x60;: Deactivate the phone as NFC device - &#x60;formatNfc&#x60;: Format NFC tags - &#x60;initializeNfc&#x60;: Initialize NFC tags - &#x60;makeSystemPayment&#x60;: Perform payments to system - &#x60;makeUserPayment&#x60;: Perform payments to other users - &#x60;manageContacts&#x60;: Manage own contacts - &#x60;manageOperators&#x60;: Manage own/user operators - &#x60;managePasswords&#x60;: Manage passwords - &#x60;mapDirectory&#x60;: View the user directory (map) - &#x60;paymentRequests&#x60;: Search and view payment requests - &#x60;personalizeNfc&#x60;: Personalize NFC tags - &#x60;personalizeNfcSelf&#x60;: Personalize NFC tags for the logged user or its operators - &#x60;purchases&#x60;: Search and view purchased webshops - &#x60;readNfc&#x60;: Read NFC tags - &#x60;receivePayment&#x60;: Receive payments from other users - &#x60;redeemVoucher&#x60;: Redeem vouchers - &#x60;registerUsersAsManager&#x60;: Register other users as user manager - &#x60;registerUsersAsMember&#x60;: Register other users as member or operator - &#x60;sendPaymentRequestToSystem&#x60;: Send payment requests to system - &#x60;sendPaymentRequestToUser&#x60;: Send payment requests to users - &#x60;unassignPos&#x60;: Unassign the current access client from POS mode - &#x60;usersSearch&#x60;: Search other users - &#x60;viewAccountInformation&#x60;: View own accounts - &#x60;viewAdvertisements&#x60;: Search and view advertisements and webshop - &#x60;viewRedeemed&#x60;: View redeemed vouchers - &#x60;viewUserProfile&#x60;: View the profile of other users
 * @package  Cyclos\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MobileOperationEnum
{
    /**
     * Possible values of this enum
     */
    const ACCEPT_TICKET = 'acceptTicket';
const ACTIVATE_NFC_DEVICE = 'activateNfcDevice';
const ASSIGN_POS = 'assignPos';
const BOUGHT_VOUCHERS = 'boughtVouchers';
const BUY_VOUCHER = 'buyVoucher';
const CREATE_TICKET = 'createTicket';
const DEACTIVATE_NFC_DEVICE = 'deactivateNfcDevice';
const FORMAT_NFC = 'formatNfc';
const INITIALIZE_NFC = 'initializeNfc';
const MAKE_SYSTEM_PAYMENT = 'makeSystemPayment';
const MAKE_USER_PAYMENT = 'makeUserPayment';
const MANAGE_CONTACTS = 'manageContacts';
const MANAGE_OPERATORS = 'manageOperators';
const MANAGE_PASSWORDS = 'managePasswords';
const MAP_DIRECTORY = 'mapDirectory';
const PAYMENT_REQUESTS = 'paymentRequests';
const PERSONALIZE_NFC = 'personalizeNfc';
const PERSONALIZE_NFC_SELF = 'personalizeNfcSelf';
const PURCHASES = 'purchases';
const READ_NFC = 'readNfc';
const RECEIVE_PAYMENT = 'receivePayment';
const REDEEM_VOUCHER = 'redeemVoucher';
const REGISTER_USERS_AS_MANAGER = 'registerUsersAsManager';
const REGISTER_USERS_AS_MEMBER = 'registerUsersAsMember';
const SEND_PAYMENT_REQUEST_TO_SYSTEM = 'sendPaymentRequestToSystem';
const SEND_PAYMENT_REQUEST_TO_USER = 'sendPaymentRequestToUser';
const UNASSIGN_POS = 'unassignPos';
const USERS_SEARCH = 'usersSearch';
const VIEW_ACCOUNT_INFORMATION = 'viewAccountInformation';
const VIEW_ADVERTISEMENTS = 'viewAdvertisements';
const VIEW_REDEEMED = 'viewRedeemed';
const VIEW_USER_PROFILE = 'viewUserProfile';
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::ACCEPT_TICKET,
self::ACTIVATE_NFC_DEVICE,
self::ASSIGN_POS,
self::BOUGHT_VOUCHERS,
self::BUY_VOUCHER,
self::CREATE_TICKET,
self::DEACTIVATE_NFC_DEVICE,
self::FORMAT_NFC,
self::INITIALIZE_NFC,
self::MAKE_SYSTEM_PAYMENT,
self::MAKE_USER_PAYMENT,
self::MANAGE_CONTACTS,
self::MANAGE_OPERATORS,
self::MANAGE_PASSWORDS,
self::MAP_DIRECTORY,
self::PAYMENT_REQUESTS,
self::PERSONALIZE_NFC,
self::PERSONALIZE_NFC_SELF,
self::PURCHASES,
self::READ_NFC,
self::RECEIVE_PAYMENT,
self::REDEEM_VOUCHER,
self::REGISTER_USERS_AS_MANAGER,
self::REGISTER_USERS_AS_MEMBER,
self::SEND_PAYMENT_REQUEST_TO_SYSTEM,
self::SEND_PAYMENT_REQUEST_TO_USER,
self::UNASSIGN_POS,
self::USERS_SEARCH,
self::VIEW_ACCOUNT_INFORMATION,
self::VIEW_ADVERTISEMENTS,
self::VIEW_REDEEMED,
self::VIEW_USER_PROFILE,        ];
    }
}
